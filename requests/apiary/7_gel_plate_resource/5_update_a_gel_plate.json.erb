<%
require 'json'
h={:header => [], :response_header => [] }
h[:description]=<<EOD
EOD
h[:method] = "PUT"
h[:url]='/11111111-2222-3333-4444-555555555555'
h[:header] << 'Accept: application/json'
h[:setup]=<<EOD
sample1 = Lims::LaboratoryApp::Laboratory::Sample.new(:name => 'sample 1')
sample2 = Lims::LaboratoryApp::Laboratory::Sample.new(:name => 'sample 2')
gel = Lims::LaboratoryApp::Laboratory::Gel.new(:number_of_rows => 8, :number_of_columns => 12)
gel["A1"] << Lims::LaboratoryApp::Laboratory::Aliquot.new(:quantity => 5, :type => "RNA", :sample => sample1)
gel["C5"] << Lims::LaboratoryApp::Laboratory::Aliquot.new(:quantity => 10, :type => "DNA", :sample => sample2)
save_with_uuid sample1 => [1,2,3,4,6], sample2 => [1,2,3,4,7], gel => [1,2,3,4,5]
EOD

h[:parameters]=<<EOP
{ 
  "windows": {
    "A1": {"sample_uuid":"11111111-2222-3333-4444-666666666666", "out_of_bounds": {"attribute_1": "value 1", "attribute_2": "value 2"}},
    "C5": {"sample_uuid":"11111111-2222-3333-4444-777777777777", "aliquot_type": "new type", "aliquot_quantity": 100}
  },
  "out_of_bounds": {"test": "value test"}
}
EOP
h[:status]=200
h[:response_header] << 'Content-Type: application/json'
h[:response]=<<EOD
{ "gel": {
    "actions": {
        "read": "/11111111-2222-3333-4444-555555555555",
        "update": "/11111111-2222-3333-4444-555555555555",
        "delete": "/11111111-2222-3333-4444-555555555555",
        "create": "/11111111-2222-3333-4444-555555555555"
    },
    "uuid": "11111111-2222-3333-4444-555555555555",
    "number_of_rows": 8,
    "number_of_columns": 12,
    "windows": { 
        "A1": [ { "sample": {
            "actions": { 
                "read": "/11111111-2222-3333-4444-666666666666",
                "update": "/11111111-2222-3333-4444-666666666666",
                "delete": "/11111111-2222-3333-4444-666666666666",
                "create": "/11111111-2222-3333-4444-666666666666" 
            },
            "uuid": "11111111-2222-3333-4444-666666666666",
            "name": "sample 1"},
            "quantity": 5,
            "type": "RNA",
            "unit": "mole",
            "out_of_bounds": {"attribute_1": "value 1", "attribute_2": "value 2"}
        } ], 
        "A2": [], "A3": [], "A4": [], "A5": [], "A6": [], "A7": [], "A8": [], "A9": [], "A10": [], "A11": [], "A12": [],
        "B1": [], "B2": [], "B3": [], "B4": [], "B5": [], "B6": [], "B7": [],"B8": [],"B9": [],"B10": [],"B11": [],"B12": [],
        "C1": [], "C2": [], "C3": [], "C4": [], 
        "C5": [ { "sample": {
            "actions": { 
                "read": "/11111111-2222-3333-4444-777777777777",
                "update": "/11111111-2222-3333-4444-777777777777",
                "delete": "/11111111-2222-3333-4444-777777777777",
                "create": "/11111111-2222-3333-4444-777777777777" 
            },
            "uuid": "11111111-2222-3333-4444-777777777777",
            "name": "sample 2"},
            "quantity": 100,
            "type": "new type",
            "unit": "mole"
        } ],
        "C6": [],"C7": [],"C8": [],"C9": [],"C10": [],"C11": [],"C12": [],
        "D1": [], "D2": [], "D3": [], "D4": [], "D5": [], "D6": [], "D7": [],"D8": [],"D9": [],"D10": [],"D11": [],"D12": [],
        "E1": [], "E2": [], "E3": [], "E4": [], "E5": [], "E6": [], "E7": [],"E8": [],"E9": [],"E10": [],"E11": [],"E12": [],
        "F1": [], "F2": [], "F3": [], "F4": [], "F5": [], "F6": [], "F7": [],"F8": [],"F9": [],"F10": [],"F11": [],"F12": [],
        "G1": [], "G2": [], "G3": [], "G4": [], "G5": [], "G6": [], "G7": [],"G8": [],"G9": [],"G10": [],"G11": [],"G12": [],
        "H1": [], "H2": [], "H3": [], "H4": [], "H5": [], "H6": [], "H7": [],"H8": [],"H9": [],"H10": [],"H11": [],"H12": []},
        "out_of_bounds": {"test": "value test"}
}}
EOD
%>
<%= h.to_json %>
